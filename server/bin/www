require('dotenv').config();
var app = require('../app');
var http = require('http');
var https = require('https');

var port = normalizePort(process.env.PORT || '8000');
var securePort = normalizePort(process.env.SECURE_PORT || '8443');

var host = process.env.HOST || '127.0.0.1';

app.set('host', host);
app.set('port', port);
app.set('securePort', securePort);

var server = http.createServer(app);
var secureServer = https.createServer(app);

server.listen(port, host, function () {
  console.log('Server listening on  ' + host + ':' + port);
}).on('error', function (error) {
  if (error.code == 'EADDRINUSE') {
    console.warn(port + ' is already in use');
  } else {
    console.warn('Error in Server Connection');
  }
  console.error(error);
  server.close();
  process.exit(1);
});

secureServer.listen(securePort, host, function () {
  console.log('Secure Server listening on  ' + host + ':' + securePort);
}).on('error', function (error) {
  if (error.code == 'EADDRINUSE') {
    console.warn(securePort + ' is already in use');
  } else {
    console.warn('Error in Secure Server Connection');
  }
  console.error(error);
  secureServer.close();
  process.exit(1);
});


function normalizePort(val) {
  var port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}


